# stack.yaml
# system-ghc: true

compiler: ghc-9.0.2

packages:
  - .

# Dependencies:
# If your modernized ndt.cabal correctly specifies modern dependencies
# (e.g., hakyll ~4.16) compatible with your new GHC, Stack should
# ideally pick them up.
#
# However, you might use a Stackage resolver to get a consistent set of
# package versions known to work with your GHC.
# Choose an LTS or nightly snapshot that uses the *same GHC version*
# as your `compiler:` field above.
# For example, if your GHC is 9.6.5, look for an lts-22.x (or newer)
# or a nightly that specifies ghc-9.6.5. Check https://www.stackage.org/.
# If you use a resolver, Stack will primarily use package versions from it.
resolver: lts-19.12 # Example for GHC 9.6.5 - **ADJUST THIS** to match your GHC and desired LTS

# If you need packages not in the resolver, or specific versions:
extra-deps:
  # - some-package-1.2.3
  # - another-package@git:... # You can also specify git repositories
  # If your modernized ndt.cabal lists everything, this might be minimal or empty.
  # Example, if you updated to Hakyll 4.16.6.0 and it's in your chosen resolver:
  # - hakyll-4.16.6.0 # Often not needed if resolver provides it.

# Allow Stack to build packages that might be slightly newer than what the resolver specifies,
# if necessary to satisfy your .cabal file's constraints. Use with caution.
# allow-newer: true
ghc-options:
  "$locals": -O0 #

nix:
  enable: true
  packages: [
    pkg-config
    zlib
    zlib.dev
    haskell.compiler.ghc902
    git
    gcc
    gmp
    git
    sass
  ]
